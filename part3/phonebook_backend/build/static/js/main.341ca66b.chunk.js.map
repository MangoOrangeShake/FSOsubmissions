{"version":3,"sources":["services/persons.js","components/display.js","components/formsAndInput.js","App.js","index.js"],"names":["baseUrl","personServices","getAll","axios","get","then","response","data","create","newPerson","post","deleteInServer","id","delete","update","newObject","put","Person","person","deleteHandler","name","number","onClick","Persons","persons","search","deletePerson","personsToShow","filter","toLowerCase","map","Notif","message","isError","className","Input","text","value","eventHandler","onChange","PersonForm","submitHandler","nameValue","nameHandler","numberValue","numberHandler","onSubmit","type","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setSearch","notif","setNotif","setIsError","useEffect","initialPersons","event","target","console","log","preventDefault","personObject","existingPerson","find","changedPerson","window","confirm","returnedPerson","setTimeout","catch","error","alert","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.341ca66b.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = `/api/persons`\n\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newPerson) => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst deleteInServer = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst personServices = { getAll, create, deleteInServer, update }\n\nexport default personServices","import React from 'react';\n\nconst Person = ({ person, deleteHandler }) => {\n    return (\n        <p>\n            {person.name} {person.number}\n            <button onClick={deleteHandler}>delete</button>\n        </p>\n    )\n}\n\nconst Persons = ({ persons, search, deletePerson }) => {\n\n    const personsToShow = search //if there is nothing in the search field (empty string = FALSE), display default persons\n        ? persons.filter(person =>\n            person.name.toLowerCase().search(search.toLowerCase()) !== -1) //.search(x) returns -1 if no match\n        : persons\n\n    return (\n        <div>\n            {personsToShow.map(person =>\n                <Person\n                    key={person.id}\n                    person={person}\n                    deleteHandler={() => deletePerson(person.id, person.name)} />\n            )}\n        </div>\n    )\n}\n\nconst Notif = ({ message, isError }) => {\n    if (message === null) {\n        return null\n    }\n\n    else {\n        if (isError) {\n            return (\n                <div className='error'>\n                    {message}\n                </div>\n            )\n        }\n        return (\n            <div className='success'>\n                {message}\n            </div>\n        )\n    }\n}\n\nexport { Person, Persons, Notif }","import React from 'react'\n\nconst Input = ({ text, value, eventHandler }) => {\n    return (\n        <div>\n            {text} <input value={value} onChange={eventHandler} />\n        </div>\n    )\n}\n\nconst PersonForm = ({ submitHandler, nameValue, nameHandler, numberValue, numberHandler }) => {\n    return (\n        <form onSubmit={submitHandler}>\n            <Input text='name:' value={nameValue} eventHandler={nameHandler} />\n            <Input text='number:' value={numberValue} eventHandler={numberHandler} />\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport { Input, PersonForm }","import React, { useState, useEffect } from 'react'\nimport personServices from './services/persons'\nimport { Persons, Notif } from './components/display'\nimport { Input, PersonForm } from './components/formsAndInput'\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [notif, setNotif] = useState(null)\n  const [isError, setIsError] = useState(true)\n\n  const fetchPersons = () => {\n    personServices  // GET REQUEST\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }\n\n  useEffect(fetchPersons, [])\n\n  const addPerson = (event) => { // event handler for submitting form\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    const existingPerson = persons.find(person =>\n      person.name.toLowerCase() === newName.toLowerCase())\n\n\n    if (existingPerson) {\n\n      if (existingPerson.number !== newNumber) {\n        const changedPerson = { ...existingPerson, number: newNumber }\n\n        if (window.confirm(`${changedPerson.name} is already added to the phonebook. Replace the old number with a new one?`)) {\n          personServices\n            .update(changedPerson.id, changedPerson)\n            .then(returnedPerson => {\n              setNotif(`Successfully replaced ${returnedPerson.name}'s number.`)\n              setIsError(false)\n              setTimeout(() => {setNotif(null)}, 5000)\n              setPersons(persons.map(person => person.id === returnedPerson.id ? returnedPerson : person))\n              setNewName('')\n              setNewNumber('')\n            })\n            .catch(error => {\n              setNotif(`Info of ${changedPerson.name} has already been removed from the server.`)\n              setIsError(true)\n              setTimeout(() => {setNotif(null)}, 8000)\n              setPersons(persons.filter(person => person.id !== changedPerson.id))\n              setNewName('')\n              setNewNumber('')\n            })\n        }\n      }\n\n      else { //allow no input if both name and number are already on the list\n        window.alert(`${newName} is already added to the phonebook.`)\n      }\n    }\n\n    else { //if new person...\n      personServices\n        .create(personObject) // POST REQUEST\n        .then(returnedPerson => {\n          setNotif(`Successfully added ${returnedPerson.name}.`)\n          setIsError(false)\n          setTimeout(() => {setNotif(null)}, 5000)\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n    }\n  }\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Are you sure you want to delete ${name}?`)) {\n      personServices\n        .deleteInServer(id) //DELETE REQUEST\n        .then(() => {\n          setNotif(`Successfully deleted ${name}.`)\n          setIsError(false)\n          setTimeout(() => {\n            setNotif(null)\n          }, 5000)\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n  }\n\n  const handleSearch = (event) => { //event handler for search input\n    setSearch(event.target.value)\n    console.log(search);\n  }\n\n  const handleNameChange = (event) => { //event handler for name input\n    setNewName(event.target.value)\n    console.log(newName);\n  }\n\n  const handleNumberChange = (event) => { //event handler for number input\n    setNewNumber(event.target.value)\n    console.log(newNumber);\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notif message={notif} isError={isError} />\n\n      <Input text='filter by name:' value={search} eventHandler={handleSearch} />\n\n      <h2>add a new</h2>\n\n      <PersonForm submitHandler={addPerson} nameValue={newName} nameHandler={handleNameChange}\n        numberValue={newNumber} numberHandler={handleNumberChange} />\n\n      <h2>Numbers</h2>\n\n      <Persons persons={persons} search={search} deletePerson={deletePerson} />\n\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}